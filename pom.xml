<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>quick.computer</name>
	<groupId>com.baker.david</groupId>
	<artifactId>quick.computer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<resthub.spring.stack.version>2.1.2</resthub.spring.stack.version>
		<jetty.version>8.1.10.v20130312</jetty.version>
		<jetty.port>8080</jetty.port>
	</properties>

	<profiles>
		<profile>
			<id>optimize</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.mcheely</groupId>
						<artifactId>requirejs-maven-plugin</artifactId>
						<version>1.0.4</version>
						<executions>
							<execution>
								<goals>
									<goal>optimize</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- path to optimizer json config file -->
							<configFile>
								${basedir}/src/main/webapp/js/build/build-maven-config.js
							</configFile>
							<!-- optional path to optimizer executable -->
							<optimizerFile>
								${basedir}/src/main/webapp/js/build/r.js
							</optimizerFile>
							<!-- whether or not to process config with maven filters -->
							<filterConfig>true</filterConfig>
							<!-- Skip requirejs optimization if true -->
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<warSourceExcludes>js/**,css/**</warSourceExcludes>
							<packagingExcludes>%regex[js/libs/(?!require).*],js/templates/**</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.resthub</groupId>
			<artifactId>resthub-jpa</artifactId>
			<version>${resthub.spring.stack.version}</version>
		</dependency>

		<dependency>
			<groupId>org.resthub</groupId>
			<artifactId>resthub-web-server</artifactId>
			<version>${resthub.spring.stack.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Needed on Tomcat, might need to take this out for JBoss? -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		    <!--  JEE stuff -->
	    <dependency>
		    <groupId>javax</groupId>
		    <artifactId>javaee-api</artifactId>
		    <version>6.0</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>

		<!-- These are the Jersey dependencies, use them with Tomcat. See 
		web.xml also >

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.17.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.9.1</version>
		</dependency-->

		<!-- RESTEASY DEPENDENCIES HERE FOR JBOSS
		
		NB: as per http://stackoverflow.com/questions/15603662/asynchronousdispatcher-error, 
			needed to make the RestEasy dependencies 'provided' rather than 'compile' -->
			
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>net.sf.scannotation</groupId>
			<artifactId>scannotation</artifactId>
			<version>1.0.2</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<!-- We use non NIO connector in order to avoid read only static files 
						under windows -->
					<connectors>
						<connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
							<port>${jetty.port}</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<!-- To run the optimized version of the webapp -->
					<!-- do a 'mvn package -Poptimize' and uncomment the following line -->
					<!-- webAppSourceDirectory>${basedir}/target/${project.build.finalName}</webAppSourceDirectory -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>snapshot</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
